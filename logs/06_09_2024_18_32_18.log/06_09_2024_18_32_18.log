[ 2024-06-09 18:32:21,455 ] 26 root - INFO - Data Ingestion method starts
[ 2024-06-09 18:32:21,908 ] 30 root - INFO - Dataset read as pandas Dataframe
[ 2024-06-09 18:32:24,287 ] 36 root - INFO - Train test split
[ 2024-06-09 18:32:26,691 ] 42 root - INFO - Ingestion of the Data is completed
[ 2024-06-09 18:32:26,701 ] 85 root - INFO - Reading train and test data
[ 2024-06-09 18:32:27,258 ] 89 root - INFO - Read train and test data sucessfully
[ 2024-06-09 18:32:27,271 ] 90 root - INFO - Train DataFrame Head:
       id  carat        cut color clarity  depth  table     x     y     z  price
0   11504   0.41      Ideal     E    VVS2   60.6   56.0  4.85  4.80  2.93   1181
1   95284   1.23  Very Good     H     VS1   59.9   59.0  6.91  7.01  4.19   7418
2  184777   1.70    Premium     H     VS2   62.0   58.0  7.61  7.66  4.74  12755
3    5419   0.33      Ideal     F    VVS1   61.2   56.0  4.47  4.44  2.73   1020
4   45466   0.33  Very Good     I     SI1   62.1   58.0  4.41  4.45  2.75    445
[ 2024-06-09 18:32:27,281 ] 91 root - INFO - Test DataFrame Head:
       id  carat        cut color clarity  depth  table     x     y     z  price
0   14868   0.50      Ideal     D     SI1   62.1   57.0  5.05  5.08  3.14   1355
1  165613   2.00  Very Good     G     SI2   59.5   57.0  8.08  8.15  4.89  14691
2   96727   0.27    Premium     E    VVS1   60.5   59.0  4.19  4.16  2.52    844
3  145593   0.32    Premium     I    VVS1   61.2   59.0  4.43  4.44  2.71    707
4  118689   1.19      Ideal     H     SI1   62.5   56.0  6.77  6.81  4.23   5797
[ 2024-06-09 18:32:27,281 ] 93 root - INFO - Now we'll Obtain object of preprocessor from fn: get_data_transformation_object
[ 2024-06-09 18:32:27,282 ] 37 root - INFO - Data Transformation initiated
[ 2024-06-09 18:32:27,282 ] 39 root - INFO - Definning categorical and numerical column
[ 2024-06-09 18:32:27,282 ] 44 root - INFO - Definning custom ranking for categorical_cols
[ 2024-06-09 18:32:27,282 ] 49 root - INFO - Initiating Numerical Pipeline
[ 2024-06-09 18:32:27,282 ] 57 root - INFO - Initiate Categorical Pipeline
[ 2024-06-09 18:32:27,282 ] 66 root - INFO - Initiate Column transformation to combine both pipelines and return a preprocessor
[ 2024-06-09 18:32:27,283 ] 72 root - INFO - Data transformation pipeline complete
[ 2024-06-09 18:32:27,283 ] 101 root - INFO - splitting the train and test data into independent and dependent features
[ 2024-06-09 18:32:27,302 ] 109 root - INFO - Applying the transformation
[ 2024-06-09 18:32:28,022 ] 114 root - INFO - Concatinating train and test input_features_arr with target_feature_arr
[ 2024-06-09 18:32:28,041 ] 119 root - INFO - Saving of processor.pkl file started
[ 2024-06-09 18:32:28,042 ] 15 root - INFO - save_object fn start
[ 2024-06-09 18:32:28,044 ] 124 root - INFO - Processor.pkl is created and saved
[ 2024-06-09 18:32:28,054 ] 27 root - INFO - splitting Independent and Dependent variables from Train and Test data
[ 2024-06-09 18:32:28,055 ] 35 root - INFO - Creating Training model
[ 2024-06-09 18:32:28,055 ] 44 root - INFO - Model evaluation start
[ 2024-06-09 18:32:28,055 ] 30 root - INFO - evaluate_model fn start
[ 2024-06-09 18:32:28,055 ] 34 root - INFO - Train Model
[ 2024-06-09 18:32:28,166 ] 37 root - INFO - Test Model
[ 2024-06-09 18:32:28,170 ] 40 root - INFO - Getting R2 score
[ 2024-06-09 18:32:28,176 ] 34 root - INFO - Train Model
[ 2024-06-09 18:32:30,379 ] 37 root - INFO - Test Model
[ 2024-06-09 18:32:30,382 ] 40 root - INFO - Getting R2 score
[ 2024-06-09 18:32:30,388 ] 34 root - INFO - Train Model
[ 2024-06-09 18:32:30,437 ] 37 root - INFO - Test Model
[ 2024-06-09 18:32:30,440 ] 40 root - INFO - Getting R2 score
[ 2024-06-09 18:32:30,446 ] 34 root - INFO - Train Model
[ 2024-06-09 18:32:30,658 ] 37 root - INFO - Test Model
[ 2024-06-09 18:32:30,661 ] 40 root - INFO - Getting R2 score
[ 2024-06-09 18:32:30,667 ] 34 root - INFO - Train Model
[ 2024-06-09 18:32:34,688 ] 37 root - INFO - Test Model
[ 2024-06-09 18:32:34,745 ] 40 root - INFO - Getting R2 score
[ 2024-06-09 18:32:34,752 ] 46 root - INFO - Model Report : {'LinearRegration': 0.9362906819996047, 'Lasso': 0.9362869814082755, 'Ridge': 0.9362900967491616, 'Elasticnet': 0.8544967219374031, 'DecisionTree': 0.9545995478232683}
[ 2024-06-09 18:32:34,752 ] 47 root - INFO - 
====================================================================================

[ 2024-06-09 18:32:34,753 ] 49 root - INFO - getting best model score from dictionary
[ 2024-06-09 18:32:34,753 ] 58 root - INFO - Best Model Found , Model Name : DecisionTree , R2 Score : 0.9545995478232683
[ 2024-06-09 18:32:34,753 ] 59 root - INFO - 
====================================================================================

[ 2024-06-09 18:32:34,754 ] 15 root - INFO - save_object fn start
